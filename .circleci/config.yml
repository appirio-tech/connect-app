version: 2
jobs:
  test:
    docker:
      - image: circleci/node:8.9.4-browsers
    steps:
      - run:
          name: installing dependency
          command: |
            sudo apt install python-dev python-pip -y
            sudo pip install awscli --upgrade  
      - run:
          name: checking out tc-deploy for environment
          command: |
            git clone --branch v1.2 https://github.com/topcoder-platform/tc-deploy-scripts ../buildscript
      - checkout
      - restore_cache:
          key: test-node-modules-{{ .Environment.CACHE_VERSION }}-{{ checksum "package-lock.json" }}
      - run: npm install
      - save_cache:
          key: test-node-modules-{{ .Environment.CACHE_VERSION }}-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - run:
          name: checking out tc-deploy for environment
          command: |
            cp ./../buildscript/buildenv.sh .
            ./buildenv.sh -e DEV -b dev-connectapp-buildvar
            ./buildenv.sh -e PROD -b prod-connectapp-buildvar
            source buildenvvar
            npm run lint
            npm run test
            npm run build
      - persist_to_workspace:
          root: .
          paths:
            - dist

  # Just tests commited code.
  deployDev:
    docker:
      - image: cibuilds/aws
    steps:
      - checkout
      - attach_workspace:
          at: ./workspace
      - deploy:
          name: Running MasterScript
          command: |
            git clone --branch v1.2 https://github.com/topcoder-platform/tc-deploy-scripts ../buildscript
            cp ./../buildscript/master_deploy.sh .
            cp ./../buildscript/buildenv.sh .
            ./buildenv.sh -e DEV -b dev-connectapp-deployvar
            source buildenvvar
            ./master_deploy.sh -d CFRONT -e DEV -c false
  # deploy to test02
  deployTest02:
    docker:
      - image: cibuilds/aws
    steps:
      - checkout
      - attach_workspace:
          at: ./workspace
      - run: ./deploy.sh TEST02 no-cache

  deployProd:
    docker:
      - image: cibuilds/aws
    steps:
      - checkout
      - attach_workspace:
          at: ./workspace
      - deploy:
          name: Running MasterScript
          command: |
            git clone --branch v1.2 https://github.com/topcoder-platform/tc-deploy-scripts ../buildscript
            cp ./../buildscript/master_deploy.sh .
            cp ./../buildscript/buildenv.sh .
            ./buildenv.sh -e PROD -b prod-connectapp-deployvar
            source buildenvvar
            ./master_deploy.sh -d CFRONT -e PROD -c false

  deployDiscourseFree:
    docker:
      - image: cibuilds/aws
    steps:
      - checkout
      - attach_workspace:
          at: ./workspace
      - run: ./deploy.sh DISCOURSE


workflows:
  version: 2
  build:
    jobs:
      - test
      - deployDev:
          requires:
            - test
          filters:
            branches:
              only: ['dev', 'dev-msinteg', 'feature/attachmentPermissions']
      - deployTest02:
          requires:
            - test
          filters:
            branches:
              only: "feature/discourse-migration"
      - deployProd:
          requires:
            - test
          filters:
            branches:
              only: master
      - deployDiscourseFree:
          requires:
            - test
          filters:
            branches:
              only: master-discourse-free
